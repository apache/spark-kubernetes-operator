/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
apply plugin: 'com.github.johnrengelman.shadow'

dependencies {
  implementation project(":spark-operator-api")
  implementation project(":spark-submission-worker")

  implementation(libs.operator.framework) {
    exclude group: 'com.squareup.okio'
    exclude group: 'io.fabric8'
  }
  implementation(libs.kubernetes.httpclient.okhttp) {
    exclude group: 'com.squareup.okhttp3'
  }
  implementation(libs.okhttp)
  implementation(libs.logging.interceptor)
  implementation(libs.spotbugs.annotations)
  // logging
  implementation(libs.log4j.api)
  implementation(libs.log4j.core)
  implementation(libs.log4j.slf4j.impl)
  implementation(libs.log4j.api12)
  implementation(libs.log4j.layout.template.json)

  // metrics
  implementation(libs.metrics.core)
  implementation(libs.metrics.jvm)
  compileOnly(libs.spark.core) {
    exclude group: "com.github.luben"
    exclude group: "io.netty", module: "netty-tcnative-boringssl-static"
    exclude group: "io.netty", module: "netty-tcnative-classes"
    exclude group: "org.apache.logging.log4j"
    exclude group: "org.fusesource.leveldbjni"
    exclude group: "org.lz4"
    exclude group: "org.rocksdb"
    exclude group: "org.slf4j"
    exclude group: "org.xerial.snappy"
    exclude group: 'com.squareup.okhttp3'
    exclude group: 'com.squareup.okio'
  }
  compileOnly(libs.lombok)

  annotationProcessor(libs.lombok)
  annotationProcessor(libs.spotbugs.annotations)

  testImplementation(libs.operator.framework.junit5) {
    exclude group: 'com.squareup.okio'
    exclude group: 'io.fabric8'
  }
  testImplementation(libs.kubernetes.server.mock) {
    exclude group: 'junit'
    exclude group: 'com.squareup.okhttp3'
  }
  testImplementation(libs.spark.core) {
    exclude group: 'com.squareup.okio'
    exclude group: 'com.squareup.okhttp3'
    exclude group: "org.apache.logging.log4j"
    exclude group: "org.slf4j"
  }
  testImplementation(libs.mockwebserver)
  testImplementation platform(libs.junit.bom)
  testImplementation(libs.junit.jupiter)
  testImplementation(libs.powermock.core)
  testRuntimeOnly(libs.junit.platform.launcher)

  testImplementation(libs.mockito.core)
}

test {
  useJUnitPlatform()
}

jar.dependsOn shadowJar

jar {
  zip64 = true
  archiveVersion.set('')
}


shadowJar {
  zip64 = true
  mergeServiceFiles()
  transform(com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer)
}

base {
  description = "Spark Kubernetes Operator"
  def artifact = "spark-kubernetes-operator"
  archivesName = artifact
}
