apply plugin: 'com.github.johnrengelman.shadow'

dependencies {
  implementation project(":spark-operator-api")
  implementation project(":spark-submission-worker")

  implementation("io.javaoperatorsdk:operator-framework:$operatorSDKVersion") {
    exclude group: 'com.squareup.okio'
    exclude group: 'io.fabric8'
  }
  implementation("io.fabric8:kubernetes-httpclient-okhttp:$fabric8Version") {
    exclude group: 'com.squareup.okhttp3'
  }
  implementation("com.squareup.okhttp3:okhttp:$okHttpVersion")
  implementation("com.squareup.okhttp3:logging-interceptor:$okHttpVersion")
  implementation("com.github.spotbugs:spotbugs-annotations:$spotBugsVersion")
  // logging
  implementation("org.apache.logging.log4j:log4j-api:$log4jVersion")
  implementation("org.apache.logging.log4j:log4j-core:$log4jVersion")
  implementation("org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion")
  implementation("org.apache.logging.log4j:log4j-1.2-api:$log4jVersion")
  implementation("org.apache.logging.log4j:log4j-layout-template-json:$log4jVersion")

  // metrics
  implementation("io.dropwizard.metrics:metrics-core:$dropwizardMetricsVersion")
  implementation("io.dropwizard.metrics:metrics-jvm:$dropwizardMetricsVersion")
  compileOnly("org.apache.spark:spark-core_$scalaVersion:$sparkVersion") {
    exclude group: 'com.squareup.okio'
    exclude group: 'com.squareup.okhttp3'
    exclude group: "org.apache.logging.log4j"
    exclude group: "org.slf4j"
  }
  compileOnly("org.projectlombok:lombok:$lombokVersion")

  annotationProcessor("org.projectlombok:lombok:$lombokVersion")
  annotationProcessor("com.github.spotbugs:spotbugs-annotations:$spotBugsVersion")

  testImplementation("io.javaoperatorsdk:operator-framework-junit-5:$operatorSDKVersion") {
    exclude group: 'com.squareup.okio'
    exclude group: 'io.fabric8'
  }
  testImplementation("io.fabric8:kubernetes-server-mock:$fabric8Version") {
    exclude group: 'junit'
    exclude group: 'com.squareup.okhttp3'
  }
  testImplementation("org.apache.spark:spark-core_$scalaVersion:$sparkVersion") {
    exclude group: 'com.squareup.okio'
    exclude group: 'com.squareup.okhttp3'
    exclude group: "org.apache.logging.log4j"
    exclude group: "org.slf4j"
  }
  testImplementation("com.squareup.okhttp3:mockwebserver:$okHttpVersion")
  testImplementation platform("org.junit:junit-bom:$junitVersion")
  testImplementation("org.junit.jupiter:junit-jupiter:$junitVersion")
  testRuntimeOnly("org.junit.platform:junit-platform-launcher")

  testImplementation("org.mockito:mockito-core:$mockitoVersion")
}

test {
  useJUnitPlatform()
}

jar.dependsOn shadowJar

jar {
  zip64 = true
  archiveVersion.set('')
}


shadowJar {
  zip64 = true
  mergeServiceFiles()
  transform(com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer)
}

base {
  description = "Spark Kubernetes Operator"
  def artifact = "spark-kubernetes-operator"
  archivesName = artifact
}
